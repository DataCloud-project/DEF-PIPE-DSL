/*
 * generated by Xtext 2.21.0
 */
package workflow.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import workflow.ide.contentassist.antlr.internal.InternalWorkflowDSLParser;
import workflow.services.WorkflowDSLGrammarAccess;

public class WorkflowDSLParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(WorkflowDSLGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, WorkflowDSLGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getStepAccess().getAlternatives(), "rule__Step__Alternatives");
			builder.put(grammarAccess.getParameterValueTypesAccess().getAlternatives(), "rule__ParameterValueTypes__Alternatives");
			builder.put(grammarAccess.getWorkflowAccess().getGroup(), "rule__Workflow__Group__0");
			builder.put(grammarAccess.getWorkflowAccess().getGroup_2(), "rule__Workflow__Group_2__0");
			builder.put(grammarAccess.getWorkflowAccess().getGroup_4(), "rule__Workflow__Group_4__0");
			builder.put(grammarAccess.getWorkflowAccess().getGroup_4_2(), "rule__Workflow__Group_4_2__0");
			builder.put(grammarAccess.getWorkflowAccess().getGroup_4_2_1(), "rule__Workflow__Group_4_2_1__0");
			builder.put(grammarAccess.getWorkflowAccess().getGroup_5(), "rule__Workflow__Group_5__0");
			builder.put(grammarAccess.getWorkflowAccess().getGroup_5_3(), "rule__Workflow__Group_5_3__0");
			builder.put(grammarAccess.getStepAccess().getGroup_0(), "rule__Step__Group_0__0");
			builder.put(grammarAccess.getStepAccess().getGroup_2(), "rule__Step__Group_2__0");
			builder.put(grammarAccess.getSourceStepAccess().getGroup(), "rule__SourceStep__Group__0");
			builder.put(grammarAccess.getSourceStepAccess().getGroup_1(), "rule__SourceStep__Group_1__0");
			builder.put(grammarAccess.getSourceStepAccess().getGroup_2(), "rule__SourceStep__Group_2__0");
			builder.put(grammarAccess.getSourceStepAccess().getGroup_2_2(), "rule__SourceStep__Group_2_2__0");
			builder.put(grammarAccess.getSourceStepAccess().getGroup_2_2_1(), "rule__SourceStep__Group_2_2_1__0");
			builder.put(grammarAccess.getSourceStepAccess().getGroup_3(), "rule__SourceStep__Group_3__0");
			builder.put(grammarAccess.getIntermediateStepAccess().getGroup(), "rule__IntermediateStep__Group__0");
			builder.put(grammarAccess.getIntermediateStepAccess().getGroup_1(), "rule__IntermediateStep__Group_1__0");
			builder.put(grammarAccess.getIntermediateStepAccess().getGroup_2(), "rule__IntermediateStep__Group_2__0");
			builder.put(grammarAccess.getIntermediateStepAccess().getGroup_2_2(), "rule__IntermediateStep__Group_2_2__0");
			builder.put(grammarAccess.getIntermediateStepAccess().getGroup_2_2_1(), "rule__IntermediateStep__Group_2_2_1__0");
			builder.put(grammarAccess.getIntermediateStepAccess().getGroup_3(), "rule__IntermediateStep__Group_3__0");
			builder.put(grammarAccess.getIntermediateStepAccess().getGroup_4(), "rule__IntermediateStep__Group_4__0");
			builder.put(grammarAccess.getSinkStepAccess().getGroup(), "rule__SinkStep__Group__0");
			builder.put(grammarAccess.getSinkStepAccess().getGroup_1(), "rule__SinkStep__Group_1__0");
			builder.put(grammarAccess.getSinkStepAccess().getGroup_2(), "rule__SinkStep__Group_2__0");
			builder.put(grammarAccess.getSinkStepAccess().getGroup_2_2(), "rule__SinkStep__Group_2_2__0");
			builder.put(grammarAccess.getSinkStepAccess().getGroup_2_2_1(), "rule__SinkStep__Group_2_2_1__0");
			builder.put(grammarAccess.getSinkStepAccess().getGroup_3(), "rule__SinkStep__Group_3__0");
			builder.put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
			builder.put(grammarAccess.getParameterAccess().getGroup_1(), "rule__Parameter__Group_1__0");
			builder.put(grammarAccess.getParameterValueTypesAccess().getGroup_0(), "rule__ParameterValueTypes__Group_0__0");
			builder.put(grammarAccess.getParameterValueTypesAccess().getGroup_1(), "rule__ParameterValueTypes__Group_1__0");
			builder.put(grammarAccess.getParameterValueTypesAccess().getGroup_2(), "rule__ParameterValueTypes__Group_2__0");
			builder.put(grammarAccess.getParameterValueTypesAccess().getGroup_3(), "rule__ParameterValueTypes__Group_3__0");
			builder.put(grammarAccess.getWFModelAccess().getWorkflowAssignment(), "rule__WFModel__WorkflowAssignment");
			builder.put(grammarAccess.getWorkflowAccess().getNameAssignment_1(), "rule__Workflow__NameAssignment_1");
			builder.put(grammarAccess.getWorkflowAccess().getBaseAssignment_2_1(), "rule__Workflow__BaseAssignment_2_1");
			builder.put(grammarAccess.getWorkflowAccess().getParamsAssignment_4_2_0(), "rule__Workflow__ParamsAssignment_4_2_0");
			builder.put(grammarAccess.getWorkflowAccess().getParamsAssignment_4_2_1_1(), "rule__Workflow__ParamsAssignment_4_2_1_1");
			builder.put(grammarAccess.getWorkflowAccess().getStepsAssignment_5_2(), "rule__Workflow__StepsAssignment_5_2");
			builder.put(grammarAccess.getWorkflowAccess().getStepsAssignment_5_3_1(), "rule__Workflow__StepsAssignment_5_3_1");
			builder.put(grammarAccess.getSourceStepAccess().getNameAssignment_0(), "rule__SourceStep__NameAssignment_0");
			builder.put(grammarAccess.getSourceStepAccess().getRecurringAssignment_1_1(), "rule__SourceStep__RecurringAssignment_1_1");
			builder.put(grammarAccess.getSourceStepAccess().getParamsAssignment_2_2_0(), "rule__SourceStep__ParamsAssignment_2_2_0");
			builder.put(grammarAccess.getSourceStepAccess().getParamsAssignment_2_2_1_1(), "rule__SourceStep__ParamsAssignment_2_2_1_1");
			builder.put(grammarAccess.getSourceStepAccess().getWriteToAssignment_3_1(), "rule__SourceStep__WriteToAssignment_3_1");
			builder.put(grammarAccess.getIntermediateStepAccess().getNameAssignment_0(), "rule__IntermediateStep__NameAssignment_0");
			builder.put(grammarAccess.getIntermediateStepAccess().getRecurringAssignment_1_1(), "rule__IntermediateStep__RecurringAssignment_1_1");
			builder.put(grammarAccess.getIntermediateStepAccess().getParamsAssignment_2_2_0(), "rule__IntermediateStep__ParamsAssignment_2_2_0");
			builder.put(grammarAccess.getIntermediateStepAccess().getParamsAssignment_2_2_1_1(), "rule__IntermediateStep__ParamsAssignment_2_2_1_1");
			builder.put(grammarAccess.getIntermediateStepAccess().getReadFromAssignment_3_1(), "rule__IntermediateStep__ReadFromAssignment_3_1");
			builder.put(grammarAccess.getIntermediateStepAccess().getWriteToAssignment_4_1(), "rule__IntermediateStep__WriteToAssignment_4_1");
			builder.put(grammarAccess.getSinkStepAccess().getNameAssignment_0(), "rule__SinkStep__NameAssignment_0");
			builder.put(grammarAccess.getSinkStepAccess().getRecurringAssignment_1_1(), "rule__SinkStep__RecurringAssignment_1_1");
			builder.put(grammarAccess.getSinkStepAccess().getParamsAssignment_2_2_0(), "rule__SinkStep__ParamsAssignment_2_2_0");
			builder.put(grammarAccess.getSinkStepAccess().getParamsAssignment_2_2_1_1(), "rule__SinkStep__ParamsAssignment_2_2_1_1");
			builder.put(grammarAccess.getSinkStepAccess().getReadFromAssignment_3_1(), "rule__SinkStep__ReadFromAssignment_3_1");
			builder.put(grammarAccess.getMessageQueueAccess().getNameAssignment(), "rule__MessageQueue__NameAssignment");
			builder.put(grammarAccess.getParameterAccess().getNameAssignment_0(), "rule__Parameter__NameAssignment_0");
			builder.put(grammarAccess.getParameterAccess().getValueAssignment_1_1(), "rule__Parameter__ValueAssignment_1_1");
			builder.put(grammarAccess.getParameterValueTypesAccess().getValueAssignment_0_1(), "rule__ParameterValueTypes__ValueAssignment_0_1");
			builder.put(grammarAccess.getParameterValueTypesAccess().getValueAssignment_1_1(), "rule__ParameterValueTypes__ValueAssignment_1_1");
			builder.put(grammarAccess.getParameterValueTypesAccess().getValueAssignment_2_1(), "rule__ParameterValueTypes__ValueAssignment_2_1");
			builder.put(grammarAccess.getParameterValueTypesAccess().getValueAssignment_3_1(), "rule__ParameterValueTypes__ValueAssignment_3_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private WorkflowDSLGrammarAccess grammarAccess;

	@Override
	protected InternalWorkflowDSLParser createParser() {
		InternalWorkflowDSLParser result = new InternalWorkflowDSLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public WorkflowDSLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(WorkflowDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
