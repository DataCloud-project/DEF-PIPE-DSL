/*
 * generated by Xtext 2.21.0
 */
grammar InternalWorkflowDSL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package workflow.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package workflow.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import workflow.services.WorkflowDSLGrammarAccess;

}
@parser::members {
	private WorkflowDSLGrammarAccess grammarAccess;

	public void setGrammarAccess(WorkflowDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleWFModel
entryRuleWFModel
:
{ before(grammarAccess.getWFModelRule()); }
	 ruleWFModel
{ after(grammarAccess.getWFModelRule()); } 
	 EOF 
;

// Rule WFModel
ruleWFModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWFModelAccess().getWorkflowAssignment()); }
		(rule__WFModel__WorkflowAssignment)*
		{ after(grammarAccess.getWFModelAccess().getWorkflowAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWorkflow
entryRuleWorkflow
:
{ before(grammarAccess.getWorkflowRule()); }
	 ruleWorkflow
{ after(grammarAccess.getWorkflowRule()); } 
	 EOF 
;

// Rule Workflow
ruleWorkflow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWorkflowAccess().getGroup()); }
		(rule__Workflow__Group__0)
		{ after(grammarAccess.getWorkflowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStep
entryRuleStep
:
{ before(grammarAccess.getStepRule()); }
	 ruleStep
{ after(grammarAccess.getStepRule()); } 
	 EOF 
;

// Rule Step
ruleStep 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStepAccess().getAlternatives()); }
		(rule__Step__Alternatives)
		{ after(grammarAccess.getStepAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSourceStep
entryRuleSourceStep
:
{ before(grammarAccess.getSourceStepRule()); }
	 ruleSourceStep
{ after(grammarAccess.getSourceStepRule()); } 
	 EOF 
;

// Rule SourceStep
ruleSourceStep 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceStepAccess().getGroup()); }
		(rule__SourceStep__Group__0)
		{ after(grammarAccess.getSourceStepAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntermediateStep
entryRuleIntermediateStep
:
{ before(grammarAccess.getIntermediateStepRule()); }
	 ruleIntermediateStep
{ after(grammarAccess.getIntermediateStepRule()); } 
	 EOF 
;

// Rule IntermediateStep
ruleIntermediateStep 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntermediateStepAccess().getGroup()); }
		(rule__IntermediateStep__Group__0)
		{ after(grammarAccess.getIntermediateStepAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSinkStep
entryRuleSinkStep
:
{ before(grammarAccess.getSinkStepRule()); }
	 ruleSinkStep
{ after(grammarAccess.getSinkStepRule()); } 
	 EOF 
;

// Rule SinkStep
ruleSinkStep 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSinkStepAccess().getGroup()); }
		(rule__SinkStep__Group__0)
		{ after(grammarAccess.getSinkStepAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMessageQueue
entryRuleMessageQueue
:
{ before(grammarAccess.getMessageQueueRule()); }
	 ruleMessageQueue
{ after(grammarAccess.getMessageQueueRule()); } 
	 EOF 
;

// Rule MessageQueue
ruleMessageQueue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMessageQueueAccess().getNameAssignment()); }
		(rule__MessageQueue__NameAssignment)
		{ after(grammarAccess.getMessageQueueAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterValueTypes
entryRuleParameterValueTypes
:
{ before(grammarAccess.getParameterValueTypesRule()); }
	 ruleParameterValueTypes
{ after(grammarAccess.getParameterValueTypesRule()); } 
	 EOF 
;

// Rule ParameterValueTypes
ruleParameterValueTypes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterValueTypesAccess().getAlternatives()); }
		(rule__ParameterValueTypes__Alternatives)
		{ after(grammarAccess.getParameterValueTypesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepAccess().getGroup_0()); }
		(rule__Step__Group_0__0)
		{ after(grammarAccess.getStepAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getStepAccess().getIntermediateStepParserRuleCall_1()); }
		ruleIntermediateStep
		{ after(grammarAccess.getStepAccess().getIntermediateStepParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStepAccess().getGroup_2()); }
		(rule__Step__Group_2__0)
		{ after(grammarAccess.getStepAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterValueTypes__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterValueTypesAccess().getGroup_0()); }
		(rule__ParameterValueTypes__Group_0__0)
		{ after(grammarAccess.getParameterValueTypesAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getParameterValueTypesAccess().getGroup_1()); }
		(rule__ParameterValueTypes__Group_1__0)
		{ after(grammarAccess.getParameterValueTypesAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getParameterValueTypesAccess().getGroup_2()); }
		(rule__ParameterValueTypes__Group_2__0)
		{ after(grammarAccess.getParameterValueTypesAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getParameterValueTypesAccess().getGroup_3()); }
		(rule__ParameterValueTypes__Group_3__0)
		{ after(grammarAccess.getParameterValueTypesAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group__0__Impl
	rule__Workflow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getWorkflowKeyword_0()); }
	'workflow'
	{ after(grammarAccess.getWorkflowAccess().getWorkflowKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group__1__Impl
	rule__Workflow__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getNameAssignment_1()); }
	(rule__Workflow__NameAssignment_1)
	{ after(grammarAccess.getWorkflowAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group__2__Impl
	rule__Workflow__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getGroup_2()); }
	(rule__Workflow__Group_2__0)?
	{ after(grammarAccess.getWorkflowAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group__3__Impl
	rule__Workflow__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getWorkflowAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group__4__Impl
	rule__Workflow__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getGroup_4()); }
	(rule__Workflow__Group_4__0)?
	{ after(grammarAccess.getWorkflowAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group__5__Impl
	rule__Workflow__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getGroup_5()); }
	(rule__Workflow__Group_5__0)
	{ after(grammarAccess.getWorkflowAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getWorkflowAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Workflow__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group_2__0__Impl
	rule__Workflow__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getExtendsKeyword_2_0()); }
	'extends'
	{ after(grammarAccess.getWorkflowAccess().getExtendsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getBaseAssignment_2_1()); }
	(rule__Workflow__BaseAssignment_2_1)
	{ after(grammarAccess.getWorkflowAccess().getBaseAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Workflow__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group_4__0__Impl
	rule__Workflow__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getParametersKeyword_4_0()); }
	'parameters:'
	{ after(grammarAccess.getWorkflowAccess().getParametersKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group_4__1__Impl
	rule__Workflow__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getLeftSquareBracketKeyword_4_1()); }
	'['
	{ after(grammarAccess.getWorkflowAccess().getLeftSquareBracketKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group_4__2__Impl
	rule__Workflow__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getGroup_4_2()); }
	(rule__Workflow__Group_4_2__0)?
	{ after(grammarAccess.getWorkflowAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getRightSquareBracketKeyword_4_3()); }
	']'
	{ after(grammarAccess.getWorkflowAccess().getRightSquareBracketKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Workflow__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group_4_2__0__Impl
	rule__Workflow__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getParamsAssignment_4_2_0()); }
	(rule__Workflow__ParamsAssignment_4_2_0)
	{ after(grammarAccess.getWorkflowAccess().getParamsAssignment_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getGroup_4_2_1()); }
	(rule__Workflow__Group_4_2_1__0)*
	{ after(grammarAccess.getWorkflowAccess().getGroup_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Workflow__Group_4_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group_4_2_1__0__Impl
	rule__Workflow__Group_4_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_4_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getCommaKeyword_4_2_1_0()); }
	','
	{ after(grammarAccess.getWorkflowAccess().getCommaKeyword_4_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_4_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group_4_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_4_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getParamsAssignment_4_2_1_1()); }
	(rule__Workflow__ParamsAssignment_4_2_1_1)
	{ after(grammarAccess.getWorkflowAccess().getParamsAssignment_4_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Workflow__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group_5__0__Impl
	rule__Workflow__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getStepsKeyword_5_0()); }
	'steps:'
	{ after(grammarAccess.getWorkflowAccess().getStepsKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group_5__1__Impl
	rule__Workflow__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getLeftSquareBracketKeyword_5_1()); }
	'['
	{ after(grammarAccess.getWorkflowAccess().getLeftSquareBracketKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group_5__2__Impl
	rule__Workflow__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getStepsAssignment_5_2()); }
	(rule__Workflow__StepsAssignment_5_2)
	{ after(grammarAccess.getWorkflowAccess().getStepsAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group_5__3__Impl
	rule__Workflow__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getGroup_5_3()); }
	(rule__Workflow__Group_5_3__0)*
	{ after(grammarAccess.getWorkflowAccess().getGroup_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_5__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_5__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getRightSquareBracketKeyword_5_4()); }
	']'
	{ after(grammarAccess.getWorkflowAccess().getRightSquareBracketKeyword_5_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Workflow__Group_5_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group_5_3__0__Impl
	rule__Workflow__Group_5_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_5_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getCommaKeyword_5_3_0()); }
	','
	{ after(grammarAccess.getWorkflowAccess().getCommaKeyword_5_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_5_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group_5_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_5_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getStepsAssignment_5_3_1()); }
	(rule__Workflow__StepsAssignment_5_3_1)
	{ after(grammarAccess.getWorkflowAccess().getStepsAssignment_5_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Step__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group_0__0__Impl
	rule__Step__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getLeftCurlyBracketKeyword_0_0()); }
	'{'
	{ after(grammarAccess.getStepAccess().getLeftCurlyBracketKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getSourceStepParserRuleCall_0_1()); }
	ruleSourceStep
	{ after(grammarAccess.getStepAccess().getSourceStepParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Step__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group_2__0__Impl
	rule__Step__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getSinkStepParserRuleCall_2_0()); }
	ruleSinkStep
	{ after(grammarAccess.getStepAccess().getSinkStepParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getRightCurlyBracketKeyword_2_1()); }
	'}'
	{ after(grammarAccess.getStepAccess().getRightCurlyBracketKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SourceStep__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceStep__Group__0__Impl
	rule__SourceStep__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStep__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceStepAccess().getNameAssignment_0()); }
	(rule__SourceStep__NameAssignment_0)
	{ after(grammarAccess.getSourceStepAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStep__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceStep__Group__1__Impl
	rule__SourceStep__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStep__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceStepAccess().getGroup_1()); }
	(rule__SourceStep__Group_1__0)?
	{ after(grammarAccess.getSourceStepAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStep__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceStep__Group__2__Impl
	rule__SourceStep__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStep__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceStepAccess().getGroup_2()); }
	(rule__SourceStep__Group_2__0)?
	{ after(grammarAccess.getSourceStepAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStep__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceStep__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStep__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceStepAccess().getGroup_3()); }
	(rule__SourceStep__Group_3__0)
	{ after(grammarAccess.getSourceStepAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SourceStep__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceStep__Group_1__0__Impl
	rule__SourceStep__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStep__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceStepAccess().getRecurringKeyword_1_0()); }
	'recurring:'
	{ after(grammarAccess.getSourceStepAccess().getRecurringKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStep__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceStep__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStep__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceStepAccess().getRecurringAssignment_1_1()); }
	(rule__SourceStep__RecurringAssignment_1_1)
	{ after(grammarAccess.getSourceStepAccess().getRecurringAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SourceStep__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceStep__Group_2__0__Impl
	rule__SourceStep__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStep__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceStepAccess().getParametersKeyword_2_0()); }
	'parameters:'
	{ after(grammarAccess.getSourceStepAccess().getParametersKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStep__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceStep__Group_2__1__Impl
	rule__SourceStep__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStep__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceStepAccess().getLeftSquareBracketKeyword_2_1()); }
	'['
	{ after(grammarAccess.getSourceStepAccess().getLeftSquareBracketKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStep__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceStep__Group_2__2__Impl
	rule__SourceStep__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStep__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceStepAccess().getGroup_2_2()); }
	(rule__SourceStep__Group_2_2__0)?
	{ after(grammarAccess.getSourceStepAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStep__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceStep__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStep__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceStepAccess().getRightSquareBracketKeyword_2_3()); }
	']'
	{ after(grammarAccess.getSourceStepAccess().getRightSquareBracketKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SourceStep__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceStep__Group_2_2__0__Impl
	rule__SourceStep__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStep__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceStepAccess().getParamsAssignment_2_2_0()); }
	(rule__SourceStep__ParamsAssignment_2_2_0)
	{ after(grammarAccess.getSourceStepAccess().getParamsAssignment_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStep__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceStep__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStep__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceStepAccess().getGroup_2_2_1()); }
	(rule__SourceStep__Group_2_2_1__0)*
	{ after(grammarAccess.getSourceStepAccess().getGroup_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SourceStep__Group_2_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceStep__Group_2_2_1__0__Impl
	rule__SourceStep__Group_2_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStep__Group_2_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceStepAccess().getCommaKeyword_2_2_1_0()); }
	','
	{ after(grammarAccess.getSourceStepAccess().getCommaKeyword_2_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStep__Group_2_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceStep__Group_2_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStep__Group_2_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceStepAccess().getParamsAssignment_2_2_1_1()); }
	(rule__SourceStep__ParamsAssignment_2_2_1_1)
	{ after(grammarAccess.getSourceStepAccess().getParamsAssignment_2_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SourceStep__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceStep__Group_3__0__Impl
	rule__SourceStep__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStep__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceStepAccess().getWriteToKeyword_3_0()); }
	'writeTo:'
	{ after(grammarAccess.getSourceStepAccess().getWriteToKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStep__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceStep__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStep__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceStepAccess().getWriteToAssignment_3_1()); }
	(rule__SourceStep__WriteToAssignment_3_1)
	{ after(grammarAccess.getSourceStepAccess().getWriteToAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntermediateStep__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntermediateStep__Group__0__Impl
	rule__IntermediateStep__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntermediateStepAccess().getNameAssignment_0()); }
	(rule__IntermediateStep__NameAssignment_0)
	{ after(grammarAccess.getIntermediateStepAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntermediateStep__Group__1__Impl
	rule__IntermediateStep__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntermediateStepAccess().getGroup_1()); }
	(rule__IntermediateStep__Group_1__0)?
	{ after(grammarAccess.getIntermediateStepAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntermediateStep__Group__2__Impl
	rule__IntermediateStep__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntermediateStepAccess().getGroup_2()); }
	(rule__IntermediateStep__Group_2__0)?
	{ after(grammarAccess.getIntermediateStepAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntermediateStep__Group__3__Impl
	rule__IntermediateStep__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntermediateStepAccess().getGroup_3()); }
	(rule__IntermediateStep__Group_3__0)
	{ after(grammarAccess.getIntermediateStepAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntermediateStep__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntermediateStepAccess().getGroup_4()); }
	(rule__IntermediateStep__Group_4__0)
	{ after(grammarAccess.getIntermediateStepAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntermediateStep__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntermediateStep__Group_1__0__Impl
	rule__IntermediateStep__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntermediateStepAccess().getRecurringKeyword_1_0()); }
	'recurring:'
	{ after(grammarAccess.getIntermediateStepAccess().getRecurringKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntermediateStep__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntermediateStepAccess().getRecurringAssignment_1_1()); }
	(rule__IntermediateStep__RecurringAssignment_1_1)
	{ after(grammarAccess.getIntermediateStepAccess().getRecurringAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntermediateStep__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntermediateStep__Group_2__0__Impl
	rule__IntermediateStep__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntermediateStepAccess().getParametersKeyword_2_0()); }
	'parameters:'
	{ after(grammarAccess.getIntermediateStepAccess().getParametersKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntermediateStep__Group_2__1__Impl
	rule__IntermediateStep__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntermediateStepAccess().getLeftSquareBracketKeyword_2_1()); }
	'['
	{ after(grammarAccess.getIntermediateStepAccess().getLeftSquareBracketKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntermediateStep__Group_2__2__Impl
	rule__IntermediateStep__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntermediateStepAccess().getGroup_2_2()); }
	(rule__IntermediateStep__Group_2_2__0)?
	{ after(grammarAccess.getIntermediateStepAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntermediateStep__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntermediateStepAccess().getRightSquareBracketKeyword_2_3()); }
	']'
	{ after(grammarAccess.getIntermediateStepAccess().getRightSquareBracketKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntermediateStep__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntermediateStep__Group_2_2__0__Impl
	rule__IntermediateStep__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntermediateStepAccess().getParamsAssignment_2_2_0()); }
	(rule__IntermediateStep__ParamsAssignment_2_2_0)
	{ after(grammarAccess.getIntermediateStepAccess().getParamsAssignment_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntermediateStep__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntermediateStepAccess().getGroup_2_2_1()); }
	(rule__IntermediateStep__Group_2_2_1__0)*
	{ after(grammarAccess.getIntermediateStepAccess().getGroup_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntermediateStep__Group_2_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntermediateStep__Group_2_2_1__0__Impl
	rule__IntermediateStep__Group_2_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__Group_2_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntermediateStepAccess().getCommaKeyword_2_2_1_0()); }
	','
	{ after(grammarAccess.getIntermediateStepAccess().getCommaKeyword_2_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__Group_2_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntermediateStep__Group_2_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__Group_2_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntermediateStepAccess().getParamsAssignment_2_2_1_1()); }
	(rule__IntermediateStep__ParamsAssignment_2_2_1_1)
	{ after(grammarAccess.getIntermediateStepAccess().getParamsAssignment_2_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntermediateStep__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntermediateStep__Group_3__0__Impl
	rule__IntermediateStep__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntermediateStepAccess().getReadFromKeyword_3_0()); }
	'readFrom:'
	{ after(grammarAccess.getIntermediateStepAccess().getReadFromKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntermediateStep__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntermediateStepAccess().getReadFromAssignment_3_1()); }
	(rule__IntermediateStep__ReadFromAssignment_3_1)
	{ after(grammarAccess.getIntermediateStepAccess().getReadFromAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntermediateStep__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntermediateStep__Group_4__0__Impl
	rule__IntermediateStep__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntermediateStepAccess().getWriteToKeyword_4_0()); }
	'writeTo:'
	{ after(grammarAccess.getIntermediateStepAccess().getWriteToKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntermediateStep__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntermediateStepAccess().getWriteToAssignment_4_1()); }
	(rule__IntermediateStep__WriteToAssignment_4_1)
	{ after(grammarAccess.getIntermediateStepAccess().getWriteToAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SinkStep__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SinkStep__Group__0__Impl
	rule__SinkStep__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SinkStep__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSinkStepAccess().getNameAssignment_0()); }
	(rule__SinkStep__NameAssignment_0)
	{ after(grammarAccess.getSinkStepAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SinkStep__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SinkStep__Group__1__Impl
	rule__SinkStep__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SinkStep__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSinkStepAccess().getGroup_1()); }
	(rule__SinkStep__Group_1__0)?
	{ after(grammarAccess.getSinkStepAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SinkStep__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SinkStep__Group__2__Impl
	rule__SinkStep__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SinkStep__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSinkStepAccess().getGroup_2()); }
	(rule__SinkStep__Group_2__0)?
	{ after(grammarAccess.getSinkStepAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SinkStep__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SinkStep__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SinkStep__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSinkStepAccess().getGroup_3()); }
	(rule__SinkStep__Group_3__0)
	{ after(grammarAccess.getSinkStepAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SinkStep__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SinkStep__Group_1__0__Impl
	rule__SinkStep__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SinkStep__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSinkStepAccess().getRecurringKeyword_1_0()); }
	'recurring:'
	{ after(grammarAccess.getSinkStepAccess().getRecurringKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SinkStep__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SinkStep__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SinkStep__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSinkStepAccess().getRecurringAssignment_1_1()); }
	(rule__SinkStep__RecurringAssignment_1_1)
	{ after(grammarAccess.getSinkStepAccess().getRecurringAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SinkStep__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SinkStep__Group_2__0__Impl
	rule__SinkStep__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SinkStep__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSinkStepAccess().getParametersKeyword_2_0()); }
	'parameters:'
	{ after(grammarAccess.getSinkStepAccess().getParametersKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SinkStep__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SinkStep__Group_2__1__Impl
	rule__SinkStep__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SinkStep__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSinkStepAccess().getLeftSquareBracketKeyword_2_1()); }
	'['
	{ after(grammarAccess.getSinkStepAccess().getLeftSquareBracketKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SinkStep__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SinkStep__Group_2__2__Impl
	rule__SinkStep__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SinkStep__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSinkStepAccess().getGroup_2_2()); }
	(rule__SinkStep__Group_2_2__0)?
	{ after(grammarAccess.getSinkStepAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SinkStep__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SinkStep__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SinkStep__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSinkStepAccess().getRightSquareBracketKeyword_2_3()); }
	']'
	{ after(grammarAccess.getSinkStepAccess().getRightSquareBracketKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SinkStep__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SinkStep__Group_2_2__0__Impl
	rule__SinkStep__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SinkStep__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSinkStepAccess().getParamsAssignment_2_2_0()); }
	(rule__SinkStep__ParamsAssignment_2_2_0)
	{ after(grammarAccess.getSinkStepAccess().getParamsAssignment_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SinkStep__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SinkStep__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SinkStep__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSinkStepAccess().getGroup_2_2_1()); }
	(rule__SinkStep__Group_2_2_1__0)*
	{ after(grammarAccess.getSinkStepAccess().getGroup_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SinkStep__Group_2_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SinkStep__Group_2_2_1__0__Impl
	rule__SinkStep__Group_2_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SinkStep__Group_2_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSinkStepAccess().getCommaKeyword_2_2_1_0()); }
	','
	{ after(grammarAccess.getSinkStepAccess().getCommaKeyword_2_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SinkStep__Group_2_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SinkStep__Group_2_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SinkStep__Group_2_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSinkStepAccess().getParamsAssignment_2_2_1_1()); }
	(rule__SinkStep__ParamsAssignment_2_2_1_1)
	{ after(grammarAccess.getSinkStepAccess().getParamsAssignment_2_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SinkStep__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SinkStep__Group_3__0__Impl
	rule__SinkStep__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SinkStep__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSinkStepAccess().getReadFromKeyword_3_0()); }
	'readFrom:'
	{ after(grammarAccess.getSinkStepAccess().getReadFromKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SinkStep__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SinkStep__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SinkStep__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSinkStepAccess().getReadFromAssignment_3_1()); }
	(rule__SinkStep__ReadFromAssignment_3_1)
	{ after(grammarAccess.getSinkStepAccess().getReadFromAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getNameAssignment_0()); }
	(rule__Parameter__NameAssignment_0)
	{ after(grammarAccess.getParameterAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getGroup_1()); }
	(rule__Parameter__Group_1__0)?
	{ after(grammarAccess.getParameterAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_1__0__Impl
	rule__Parameter__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getEqualsSignKeyword_1_0()); }
	'='
	{ after(grammarAccess.getParameterAccess().getEqualsSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getValueAssignment_1_1()); }
	(rule__Parameter__ValueAssignment_1_1)
	{ after(grammarAccess.getParameterAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterValueTypes__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterValueTypes__Group_0__0__Impl
	rule__ParameterValueTypes__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterValueTypes__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterValueTypesAccess().getStringTypeAction_0_0()); }
	()
	{ after(grammarAccess.getParameterValueTypesAccess().getStringTypeAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterValueTypes__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterValueTypes__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterValueTypes__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterValueTypesAccess().getValueAssignment_0_1()); }
	(rule__ParameterValueTypes__ValueAssignment_0_1)
	{ after(grammarAccess.getParameterValueTypesAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterValueTypes__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterValueTypes__Group_1__0__Impl
	rule__ParameterValueTypes__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterValueTypes__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterValueTypesAccess().getIntTypeAction_1_0()); }
	()
	{ after(grammarAccess.getParameterValueTypesAccess().getIntTypeAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterValueTypes__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterValueTypes__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterValueTypes__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterValueTypesAccess().getValueAssignment_1_1()); }
	(rule__ParameterValueTypes__ValueAssignment_1_1)
	{ after(grammarAccess.getParameterValueTypesAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterValueTypes__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterValueTypes__Group_2__0__Impl
	rule__ParameterValueTypes__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterValueTypes__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterValueTypesAccess().getBoolTypeAction_2_0()); }
	()
	{ after(grammarAccess.getParameterValueTypesAccess().getBoolTypeAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterValueTypes__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterValueTypes__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterValueTypes__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterValueTypesAccess().getValueAssignment_2_1()); }
	(rule__ParameterValueTypes__ValueAssignment_2_1)
	{ after(grammarAccess.getParameterValueTypesAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterValueTypes__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterValueTypes__Group_3__0__Impl
	rule__ParameterValueTypes__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterValueTypes__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterValueTypesAccess().getIdentifierAction_3_0()); }
	()
	{ after(grammarAccess.getParameterValueTypesAccess().getIdentifierAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterValueTypes__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterValueTypes__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterValueTypes__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterValueTypesAccess().getValueAssignment_3_1()); }
	(rule__ParameterValueTypes__ValueAssignment_3_1)
	{ after(grammarAccess.getParameterValueTypesAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WFModel__WorkflowAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWFModelAccess().getWorkflowWorkflowParserRuleCall_0()); }
		ruleWorkflow
		{ after(grammarAccess.getWFModelAccess().getWorkflowWorkflowParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkflowAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getWorkflowAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__BaseAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkflowAccess().getBaseWorkflowCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getWorkflowAccess().getBaseWorkflowIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getWorkflowAccess().getBaseWorkflowIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getWorkflowAccess().getBaseWorkflowCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__ParamsAssignment_4_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkflowAccess().getParamsParameterParserRuleCall_4_2_0_0()); }
		ruleParameter
		{ after(grammarAccess.getWorkflowAccess().getParamsParameterParserRuleCall_4_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__ParamsAssignment_4_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkflowAccess().getParamsParameterParserRuleCall_4_2_1_1_0()); }
		ruleParameter
		{ after(grammarAccess.getWorkflowAccess().getParamsParameterParserRuleCall_4_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__StepsAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkflowAccess().getStepsStepParserRuleCall_5_2_0()); }
		ruleStep
		{ after(grammarAccess.getWorkflowAccess().getStepsStepParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__StepsAssignment_5_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkflowAccess().getStepsStepParserRuleCall_5_3_1_0()); }
		ruleStep
		{ after(grammarAccess.getWorkflowAccess().getStepsStepParserRuleCall_5_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStep__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceStepAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getSourceStepAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStep__RecurringAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceStepAccess().getRecurringBOOL_LITERALTerminalRuleCall_1_1_0()); }
		RULE_BOOL_LITERAL
		{ after(grammarAccess.getSourceStepAccess().getRecurringBOOL_LITERALTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStep__ParamsAssignment_2_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceStepAccess().getParamsParameterParserRuleCall_2_2_0_0()); }
		ruleParameter
		{ after(grammarAccess.getSourceStepAccess().getParamsParameterParserRuleCall_2_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStep__ParamsAssignment_2_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceStepAccess().getParamsParameterParserRuleCall_2_2_1_1_0()); }
		ruleParameter
		{ after(grammarAccess.getSourceStepAccess().getParamsParameterParserRuleCall_2_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStep__WriteToAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceStepAccess().getWriteToMessageQueueParserRuleCall_3_1_0()); }
		ruleMessageQueue
		{ after(grammarAccess.getSourceStepAccess().getWriteToMessageQueueParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntermediateStepAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getIntermediateStepAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__RecurringAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntermediateStepAccess().getRecurringBOOL_LITERALTerminalRuleCall_1_1_0()); }
		RULE_BOOL_LITERAL
		{ after(grammarAccess.getIntermediateStepAccess().getRecurringBOOL_LITERALTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__ParamsAssignment_2_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntermediateStepAccess().getParamsParameterParserRuleCall_2_2_0_0()); }
		ruleParameter
		{ after(grammarAccess.getIntermediateStepAccess().getParamsParameterParserRuleCall_2_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__ParamsAssignment_2_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntermediateStepAccess().getParamsParameterParserRuleCall_2_2_1_1_0()); }
		ruleParameter
		{ after(grammarAccess.getIntermediateStepAccess().getParamsParameterParserRuleCall_2_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__ReadFromAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntermediateStepAccess().getReadFromMessageQueueParserRuleCall_3_1_0()); }
		ruleMessageQueue
		{ after(grammarAccess.getIntermediateStepAccess().getReadFromMessageQueueParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntermediateStep__WriteToAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntermediateStepAccess().getWriteToMessageQueueParserRuleCall_4_1_0()); }
		ruleMessageQueue
		{ after(grammarAccess.getIntermediateStepAccess().getWriteToMessageQueueParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SinkStep__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSinkStepAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getSinkStepAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SinkStep__RecurringAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSinkStepAccess().getRecurringBOOL_LITERALTerminalRuleCall_1_1_0()); }
		RULE_BOOL_LITERAL
		{ after(grammarAccess.getSinkStepAccess().getRecurringBOOL_LITERALTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SinkStep__ParamsAssignment_2_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSinkStepAccess().getParamsParameterParserRuleCall_2_2_0_0()); }
		ruleParameter
		{ after(grammarAccess.getSinkStepAccess().getParamsParameterParserRuleCall_2_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SinkStep__ParamsAssignment_2_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSinkStepAccess().getParamsParameterParserRuleCall_2_2_1_1_0()); }
		ruleParameter
		{ after(grammarAccess.getSinkStepAccess().getParamsParameterParserRuleCall_2_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SinkStep__ReadFromAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSinkStepAccess().getReadFromMessageQueueParserRuleCall_3_1_0()); }
		ruleMessageQueue
		{ after(grammarAccess.getSinkStepAccess().getReadFromMessageQueueParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageQueue__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageQueueAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getMessageQueueAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getValueParameterValueTypesParserRuleCall_1_1_0()); }
		ruleParameterValueTypes
		{ after(grammarAccess.getParameterAccess().getValueParameterValueTypesParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterValueTypes__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterValueTypesAccess().getValueSTRINGTerminalRuleCall_0_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getParameterValueTypesAccess().getValueSTRINGTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterValueTypes__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterValueTypesAccess().getValueINTTerminalRuleCall_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getParameterValueTypesAccess().getValueINTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterValueTypes__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterValueTypesAccess().getValueBOOL_LITERALTerminalRuleCall_2_1_0()); }
		RULE_BOOL_LITERAL
		{ after(grammarAccess.getParameterValueTypesAccess().getValueBOOL_LITERALTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterValueTypes__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterValueTypesAccess().getValueIDTerminalRuleCall_3_1_0()); }
		RULE_ID
		{ after(grammarAccess.getParameterValueTypesAccess().getValueIDTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_BOOL_LITERAL : ('true'|'false');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
