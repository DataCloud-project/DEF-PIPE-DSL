/**
 * generated by Xtext 2.21.0
 */
package workflow.workflowDSL.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import workflow.workflowDSL.MessageQueue;
import workflow.workflowDSL.SourceStep;
import workflow.workflowDSL.WorkflowDSLPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Source Step</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link workflow.workflowDSL.impl.SourceStepImpl#getWriteTo <em>Write To</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SourceStepImpl extends StepImpl implements SourceStep
{
  /**
   * The cached value of the '{@link #getWriteTo() <em>Write To</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWriteTo()
   * @generated
   * @ordered
   */
  protected MessageQueue writeTo;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SourceStepImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return WorkflowDSLPackage.Literals.SOURCE_STEP;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MessageQueue getWriteTo()
  {
    return writeTo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetWriteTo(MessageQueue newWriteTo, NotificationChain msgs)
  {
    MessageQueue oldWriteTo = writeTo;
    writeTo = newWriteTo;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, WorkflowDSLPackage.SOURCE_STEP__WRITE_TO, oldWriteTo, newWriteTo);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWriteTo(MessageQueue newWriteTo)
  {
    if (newWriteTo != writeTo)
    {
      NotificationChain msgs = null;
      if (writeTo != null)
        msgs = ((InternalEObject)writeTo).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - WorkflowDSLPackage.SOURCE_STEP__WRITE_TO, null, msgs);
      if (newWriteTo != null)
        msgs = ((InternalEObject)newWriteTo).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - WorkflowDSLPackage.SOURCE_STEP__WRITE_TO, null, msgs);
      msgs = basicSetWriteTo(newWriteTo, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowDSLPackage.SOURCE_STEP__WRITE_TO, newWriteTo, newWriteTo));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case WorkflowDSLPackage.SOURCE_STEP__WRITE_TO:
        return basicSetWriteTo(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case WorkflowDSLPackage.SOURCE_STEP__WRITE_TO:
        return getWriteTo();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case WorkflowDSLPackage.SOURCE_STEP__WRITE_TO:
        setWriteTo((MessageQueue)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case WorkflowDSLPackage.SOURCE_STEP__WRITE_TO:
        setWriteTo((MessageQueue)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case WorkflowDSLPackage.SOURCE_STEP__WRITE_TO:
        return writeTo != null;
    }
    return super.eIsSet(featureID);
  }

} //SourceStepImpl
