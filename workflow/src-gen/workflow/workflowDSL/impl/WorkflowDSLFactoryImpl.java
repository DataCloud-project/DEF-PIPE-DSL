/**
 * generated by Xtext 2.21.0
 */
package workflow.workflowDSL.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import workflow.workflowDSL.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class WorkflowDSLFactoryImpl extends EFactoryImpl implements WorkflowDSLFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static WorkflowDSLFactory init()
  {
    try
    {
      WorkflowDSLFactory theWorkflowDSLFactory = (WorkflowDSLFactory)EPackage.Registry.INSTANCE.getEFactory(WorkflowDSLPackage.eNS_URI);
      if (theWorkflowDSLFactory != null)
      {
        return theWorkflowDSLFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new WorkflowDSLFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public WorkflowDSLFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case WorkflowDSLPackage.WF_MODEL: return createWFModel();
      case WorkflowDSLPackage.WORKFLOW: return createWorkflow();
      case WorkflowDSLPackage.STEP: return createStep();
      case WorkflowDSLPackage.SOURCE_STEP: return createSourceStep();
      case WorkflowDSLPackage.INTERMEDIATE_STEP: return createIntermediateStep();
      case WorkflowDSLPackage.SINK_STEP: return createSinkStep();
      case WorkflowDSLPackage.MESSAGE_QUEUE: return createMessageQueue();
      case WorkflowDSLPackage.PARAMETER: return createParameter();
      case WorkflowDSLPackage.PARAMETER_VALUE_TYPES: return createParameterValueTypes();
      case WorkflowDSLPackage.STRING_TYPE: return createStringType();
      case WorkflowDSLPackage.INT_TYPE: return createIntType();
      case WorkflowDSLPackage.BOOL_TYPE: return createBoolType();
      case WorkflowDSLPackage.IDENTIFIER: return createIdentifier();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WFModel createWFModel()
  {
    WFModelImpl wfModel = new WFModelImpl();
    return wfModel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Workflow createWorkflow()
  {
    WorkflowImpl workflow = new WorkflowImpl();
    return workflow;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Step createStep()
  {
    StepImpl step = new StepImpl();
    return step;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SourceStep createSourceStep()
  {
    SourceStepImpl sourceStep = new SourceStepImpl();
    return sourceStep;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IntermediateStep createIntermediateStep()
  {
    IntermediateStepImpl intermediateStep = new IntermediateStepImpl();
    return intermediateStep;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SinkStep createSinkStep()
  {
    SinkStepImpl sinkStep = new SinkStepImpl();
    return sinkStep;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MessageQueue createMessageQueue()
  {
    MessageQueueImpl messageQueue = new MessageQueueImpl();
    return messageQueue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Parameter createParameter()
  {
    ParameterImpl parameter = new ParameterImpl();
    return parameter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ParameterValueTypes createParameterValueTypes()
  {
    ParameterValueTypesImpl parameterValueTypes = new ParameterValueTypesImpl();
    return parameterValueTypes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StringType createStringType()
  {
    StringTypeImpl stringType = new StringTypeImpl();
    return stringType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IntType createIntType()
  {
    IntTypeImpl intType = new IntTypeImpl();
    return intType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BoolType createBoolType()
  {
    BoolTypeImpl boolType = new BoolTypeImpl();
    return boolType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Identifier createIdentifier()
  {
    IdentifierImpl identifier = new IdentifierImpl();
    return identifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WorkflowDSLPackage getWorkflowDSLPackage()
  {
    return (WorkflowDSLPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static WorkflowDSLPackage getPackage()
  {
    return WorkflowDSLPackage.eINSTANCE;
  }

} //WorkflowDSLFactoryImpl
